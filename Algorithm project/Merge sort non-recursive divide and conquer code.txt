def merge(arr, l, mid, h):
    n1 = mid - l + 1
    n2 = h - mid

    left_half = arr[l:l + n1]
    right_half = arr[mid + 1:mid + 1 + n2]
    #print("left:",left_half, "right:",right_half)
    i = j = 0
    k = l

    while i < n1 and j < n2:
        if left_half[i] <= right_half[j]:
            arr[k] = left_half[i]
            i += 1
        else:
            arr[k] = right_half[j]
            j += 1
        k += 1

    while i < n1:
        arr[k] = left_half[i]
        i += 1
        k += 1

    while j < n2:
        arr[k] = right_half[j]
        j += 1
        k += 1


def merge_sort(arr):
    n = len(arr)

    p = 1
    while p <= n:
        l = 0
        while l < n - 1:
            mid = l + p - 1
            h = min(l + 2 * p - 1, n - 1)
            #print("p:",p, "l:",l)
            merge(arr, l, mid, h)
            l += 2 * p

        p *= 2



arr = [12, 11, 13, 5, 6, 7]
merge_sort(arr)
print("Sorted array:", arr)
